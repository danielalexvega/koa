/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: KOA 
 * Environment: Production
 * Id: 8381787f-717e-007f-809d-a80af690508b
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { PersonType } from '../types/person-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Recipe' type
*/
            export type RecipeTypeCodename = keyof Pick<Record<TypeCodenames, null>, "recipe">;

            /*
* Typeguard for codename of 'Recipe' type
*/
            export function isRecipeTypeCodename(value: string | undefined | null): value is RecipeTypeCodename {
                return typeof value === 'string' && value === ('recipe' satisfies RecipeTypeCodename);
            }

/*
    * Recipe
    *
    * Id: 39469d56-0736-45d0-98e6-7b3af860b4c4
* Codename: recipe
    */
export type RecipeType = IContentItem<
{
/*
    * Recipe Title
    *
    * Codename: recipe_title
* Id: 794b1545-ab88-4536-bc9e-aa91f2cc3f6a
* Type: text
* Required: false
    */
                readonly recipe_title: Elements.TextElement;

/*
    * Recipe Description
    *
    * Codename: recipe_description
* Id: e5820689-cd31-4af5-88c3-7978989db2e5
* Type: text
* Required: false
    */
                readonly recipe_description: Elements.TextElement;

/*
    * Ingredients
    *
    * Codename: ingredients
* Id: cdee7690-89fe-424f-9e2c-c0ca4fabf8f4
* Type: rich_text
* Required: false
    */
                readonly ingredients: Elements.RichTextElement<CoreType>;

/*
    * Preparation
    *
    * Codename: preparation
* Id: 667451bc-0280-4dc4-9cb9-57b4e59499fb
* Type: rich_text
* Required: false
    */
                readonly preparation: Elements.RichTextElement<CoreType>;

/*
    * Submitted By
    *
    * Codename: submitted_by
* Id: 2d9cce83-7d21-4aa2-a420-3c466d3c2355
* Type: modular_content
* Required: false
* Allowed content types: person
    */
                readonly submitted_by: Elements.LinkedItemsElement<PersonType>;}, 
RecipeTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Recipe
*/
export type RecipeTypeElementCodenames = 'recipe_title' | 'recipe_description' | 'ingredients' | 'preparation' | 'submitted_by';;

/*
    * Type guard for Recipe
    *
    * Id: 39469d56-0736-45d0-98e6-7b3af860b4c4
* Codename: recipe
    */
export function isRecipeType(item: IContentItem | undefined | null): item is RecipeType {
                return item?.system.type === ('recipe' satisfies RecipeTypeCodename);
            };



            