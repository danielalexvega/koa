/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: KOA 
 * Environment: Production
 * Id: 8381787f-717e-007f-809d-a80af690508b
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { EventTopicTaxonomyTermCodenames, EventTopicTaxonomyCodename } from '../taxonomies/event-topic-taxonomy.generated.js';
import type { EventTypeTaxonomyTermCodenames, EventTypeTaxonomyCodename } from '../taxonomies/event-type-taxonomy.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Event' type
*/
            export type EventTypeCodename = keyof Pick<Record<TypeCodenames, null>, "event">;

            /*
* Typeguard for codename of 'Event' type
*/
            export function isEventTypeCodename(value: string | undefined | null): value is EventTypeCodename {
                return typeof value === 'string' && value === ('event' satisfies EventTypeCodename);
            }

/*
    * Event
    *
    * Id: e97907ba-c5ae-53e6-bcb6-091bc89da3fa
* Codename: event
* External Id: event
    */
export type EventType = IContentItem<
{
/*
    * Name
    *
    * Codename: name
* Id: 60502ad7-d552-5435-af46-6f4df84c3ddd
* External Id: event_default_name_element
* Type: text
* Required: true
    */
                readonly name: Elements.TextElement;

/*
    * Image
    *
    * Codename: image
* Id: b13e797e-0e50-5ecb-aebc-05aa9e180864
* External Id: event_default_image_element
* Type: asset
* Required: true
    */
                readonly image: Elements.AssetsElement;

/*
    * Description
    *
    * Codename: description
* Id: 2a7a8e84-274c-5339-afd2-4865b643fbb2
* External Id: event_default_description_element
* Type: rich_text
* Required: true
    */
                readonly description: Elements.RichTextElement<CoreType>;

/*
    * Start Date
    *
    * Codename: start_date
* Id: 114ba02d-f9dd-5555-a78d-6798d1a835a0
* External Id: event_default_start_date_element
* Type: date_time
* Required: true
    */
                readonly start_date: Elements.DateTimeElement;

/*
    * End Date
    *
    * Codename: end_date
* Id: a00fecf1-c7ff-5bed-8c40-2eba7460170a
* External Id: event_default_end_date_element
* Type: date_time
* Required: true
    */
                readonly end_date: Elements.DateTimeElement;

/*
    * Event Type
    *
    * Codename: event_type
* Id: aa177aeb-9cd0-5a3a-a6b6-ca055fe2cae3
* External Id: event_default_event_type_element
* Type: taxonomy
* Required: true
* Taxonomy: event_type
    */
                readonly event_type: Elements.TaxonomyElement<EventTypeTaxonomyTermCodenames, EventTypeTaxonomyCodename>;

/*
    * Event Topic
    *
    * Codename: event_topic
* Id: 0da8a57d-a1d5-5b1e-9b6e-6d28dc1a6caa
* External Id: event_default_event_topic_element
* Type: taxonomy
* Required: true
* Taxonomy: event_topic
    */
                readonly event_topic: Elements.TaxonomyElement<EventTopicTaxonomyTermCodenames, EventTopicTaxonomyCodename>;

/*
    * Link
    *
    * Codename: link
* Id: 32d44bc2-47a3-4a3f-aa04-5d99b5cdc245
* Type: text
* Required: false
    */
                readonly link: Elements.TextElement;

/*
    * Phone Number
    *
    * Codename: phone_number
* Id: 83a27300-0b4c-444e-be3a-8c79b26a3e98
* Type: text
* Required: false
    */
                readonly phone_number: Elements.TextElement;}, 
EventTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Event
*/
export type EventTypeElementCodenames = 'name' | 'image' | 'description' | 'start_date' | 'end_date' | 'event_type' | 'event_topic' | 'link' | 'phone_number';;

/*
    * Type guard for Event
    *
    * Id: e97907ba-c5ae-53e6-bcb6-091bc89da3fa
* Codename: event
* External Id: event
    */
export function isEventType(item: IContentItem | undefined | null): item is EventType {
                return item?.system.type === ('event' satisfies EventTypeCodename);
            };



            