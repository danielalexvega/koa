/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: KOA 
 * Environment: Production
 * Id: 8381787f-717e-007f-809d-a80af690508b
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { ArticleTypeTaxonomyTermCodenames, ArticleTypeTaxonomyCodename } from '../taxonomies/article-type-taxonomy.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { MetadataSnippet } from '../snippets/metadata-snippet.generated.js';
import type { PersonType } from '../types/person-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Article' type
*/
            export type ArticleTypeCodename = keyof Pick<Record<TypeCodenames, null>, "article">;

            /*
* Typeguard for codename of 'Article' type
*/
            export function isArticleTypeCodename(value: string | undefined | null): value is ArticleTypeCodename {
                return typeof value === 'string' && value === ('article' satisfies ArticleTypeCodename);
            }

/*
    * Article
    *
    * Id: d622fc28-5202-511a-9dbf-a3ee363b6c7c
* Codename: article
* External Id: article
    */
export type ArticleType = IContentItem<
{
/*
    * Title
    *
    * Codename: title
* Id: ad06c69a-9ccd-5d8c-b2de-b6a9f83d00fc
* External Id: article_default_title_element
* Type: text
* Required: true
    */
                readonly title: Elements.TextElement;

/*
    * Publish Date
    *
    * Codename: publish_date
* Id: abdf08ea-55f0-5460-96e0-391f7471c7e9
* External Id: article_default_publish_date_element
* Type: date_time
* Required: true
    */
                readonly publish_date: Elements.DateTimeElement;

/*
    * Introduction
    *
    * Codename: introduction
* Id: c3fc1a88-5577-5130-b0aa-b1837c009ba6
* External Id: article_default_introduction_element
* Type: text
* Required: true
    */
                readonly introduction: Elements.TextElement;

/*
    * Author
    *
    * Codename: author
* Id: 645445ef-c1a0-4eec-bbec-fcb2ce2e1862
* Type: modular_content
* Required: false
* Allowed content types: person
    */
                readonly author: Elements.LinkedItemsElement<PersonType>;

/*
    * Image
    *
    * Codename: image
* Id: 8c501358-d0f7-5959-95bd-2991f1215e33
* External Id: article_default_image_element
* Type: asset
* Required: true
    */
                readonly image: Elements.AssetsElement;

/*
    * Body Copy
    *
    * Codename: body_copy
* Id: 0747fb13-7383-59fe-bf64-2bab6d384279
* External Id: article_default_body_copy_element
* Type: rich_text
* Required: true
    */
                readonly body_copy: Elements.RichTextElement<CoreType>;

/*
    * Article Type
    *
    * Codename: article_type
* Id: 2f84cb44-a29b-4f09-88f5-847d0f0b82a2
* Type: taxonomy
* Required: false
* Taxonomy: article_type
    */
                readonly article_type: Elements.TaxonomyElement<ArticleTypeTaxonomyTermCodenames, ArticleTypeTaxonomyCodename>;

/*
    * taxonomy
    *
    * Codename: topics
* Id: 945fa79f-fc67-480b-8e20-b777cce76ab5
* Type: taxonomy
* Required: false
    */
                readonly topics: Elements.TaxonomyElement;

/*
    * Related Articles
    *
    * Codename: related_articles
* Id: bf44c9a2-6bd9-455a-8cfd-68cc806cf359
* Type: modular_content
* Required: false
* Allowed content types: article
    */
                readonly related_articles: Elements.LinkedItemsElement<ArticleType>;

/*
    * URL slug
    *
    * Codename: url_slug
* Id: 33f5f8e9-aca2-4f52-a3b2-68ea6337ed59
* Type: url_slug
* Required: true
    */
                readonly url_slug: Elements.UrlSlugElement;} & MetadataSnippet, 
ArticleTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Article
*/
export type ArticleTypeElementCodenames = 'title' | 'publish_date' | 'introduction' | 'author' | 'image' | 'body_copy' | 'article_type' | 'topics' | 'related_articles' | 'metadata__title' | 'metadata__keywords' | 'metadata__description' | 'url_slug';;

/*
    * Type guard for Article
    *
    * Id: d622fc28-5202-511a-9dbf-a3ee363b6c7c
* Codename: article
* External Id: article
    */
export function isArticleType(item: IContentItem | undefined | null): item is ArticleType {
                return item?.system.type === ('article' satisfies ArticleTypeCodename);
            };



            