/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: KOA 
 * Environment: Production
 * Id: 8381787f-717e-007f-809d-a80af690508b
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Attraction' type
*/
            export type AttractionTypeCodename = keyof Pick<Record<TypeCodenames, null>, "attraction">;

            /*
* Typeguard for codename of 'Attraction' type
*/
            export function isAttractionTypeCodename(value: string | undefined | null): value is AttractionTypeCodename {
                return typeof value === 'string' && value === ('attraction' satisfies AttractionTypeCodename);
            }

/*
    * Attraction
    *
    * Id: d393aae8-03fb-4a63-b0bb-a1b0023cc16e
* Codename: attraction
    */
export type AttractionType = IContentItem<
{
/*
    * Name
    *
    * Codename: name
* Id: b7d09163-be79-4ed4-9526-4e066c1f5751
* Type: text
* Required: true
    */
                readonly name: Elements.TextElement;

/*
    * Body
    *
    * Codename: body
* Id: c1b4c2ee-a5e9-4163-9e75-b3930259e126
* Type: rich_text
* Required: false
    */
                readonly body: Elements.RichTextElement<CoreType>;

/*
    * Address
    *
    * Codename: address
* Id: 60789f84-9b0c-4493-a311-d05d3e641d68
* Type: text
* Required: false
    */
                readonly address: Elements.TextElement;

/*
    * Website Link
    *
    * Codename: website_link
* Id: 055b4bd0-8b29-4a57-9c58-bef70f8f9877
* Type: text
* Required: false
    */
                readonly website_link: Elements.TextElement;

/*
    * Image
    *
    * Codename: image
* Id: 1cf7e837-c3d8-49e8-9690-d0a53b0c4aaa
* Type: asset
* Required: false
    */
                readonly image: Elements.AssetsElement;}, 
AttractionTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Attraction
*/
export type AttractionTypeElementCodenames = 'name' | 'body' | 'address' | 'website_link' | 'image';;

/*
    * Type guard for Attraction
    *
    * Id: d393aae8-03fb-4a63-b0bb-a1b0023cc16e
* Codename: attraction
    */
export function isAttractionType(item: IContentItem | undefined | null): item is AttractionType {
                return item?.system.type === ('attraction' satisfies AttractionTypeCodename);
            };



            