/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: KOA 
 * Environment: Production
 * Id: 8381787f-717e-007f-809d-a80af690508b
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
// import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Disclaimer' type
*/
            export type DisclaimerTypeCodename = keyof Pick<Record<TypeCodenames, null>, "disclaimer">;

            /*
* Typeguard for codename of 'Disclaimer' type
*/
            export function isDisclaimerTypeCodename(value: string | undefined | null): value is DisclaimerTypeCodename {
                return typeof value === 'string' && value === ('disclaimer' satisfies DisclaimerTypeCodename);
            }

/*
    * Disclaimer
    *
    * Id: 01c917db-9ea5-4452-9b23-57a37f56a2c2
* Codename: disclaimer
    */
export type DisclaimerType = IContentItem<
{
/*
    * Headline
    *
    * Codename: headline
* Id: 58fa6567-06ef-4add-a59a-a189d89b1d27
* Type: text
* Required: true
    */
                readonly headline: Elements.TextElement;

/*
    * Subheadline
    *
    * Codename: subheadline
* Id: b85982af-b575-4650-b8e7-8a34e1b0e99c
* Type: text
* Required: true
    */
                readonly subheadline: Elements.TextElement;

/*
    * Type
    *
    * Codename: type
* Id: d142d0ee-2163-44a0-bcfd-f4146488c858
* Type: multiple_choice
* Required: true
    */
                readonly type: Elements.MultipleChoiceElement<DisclaimerTypeTypeMultipleChoiceOptions>;}, 
DisclaimerTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Disclaimer
*/
export type DisclaimerTypeElementCodenames = 'headline' | 'subheadline' | 'type';;

/*
    * Type guard for Disclaimer
    *
    * Id: 01c917db-9ea5-4452-9b23-57a37f56a2c2
* Codename: disclaimer
    */
export function isDisclaimerType(item: IContentItem | undefined | null): item is DisclaimerType {
                return item?.system.type === ('disclaimer' satisfies DisclaimerTypeCodename);
            };

export type DisclaimerTypeTypeMultipleChoiceOptions = 'informational' | 'promotional'

            