/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: KOA 
 * Environment: Production
 * Id: 8381787f-717e-007f-809d-a80af690508b
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { AmenitiesTaxonomyTermCodenames, AmenitiesTaxonomyCodename } from '../taxonomies/amenities-taxonomy.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { PageType } from '../types/page-type.generated.js';
import type { WaysToStayTaxonomyTermCodenames, WaysToStayTaxonomyCodename } from '../taxonomies/ways-to-stay-taxonomy.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Campground' type
*/
            export type CampgroundTypeCodename = keyof Pick<Record<TypeCodenames, null>, "campground">;

            /*
* Typeguard for codename of 'Campground' type
*/
            export function isCampgroundTypeCodename(value: string | undefined | null): value is CampgroundTypeCodename {
                return typeof value === 'string' && value === ('campground' satisfies CampgroundTypeCodename);
            }

/*
    * Campground
    *
    * Id: 8a8d9c56-59bf-4821-aa9d-bab9d33cb2ed
* Codename: campground
    */
export type CampgroundType = IContentItem<
{
/*
    * Name
    *
    * Codename: name
* Id: ad532aca-f310-4b7b-b116-b65f0f1715e6
* Type: text
* Required: true
    */
                readonly name: Elements.TextElement;

/*
    * Phone Number
    *
    * Codename: phone_number
* Id: baee6edc-776a-4ef0-bdb9-ad1eb24e861b
* Type: text
* Required: true
* Guidelines: Please include the international code and area code (ex. 1-555-555-5555)
    */
                readonly phone_number: Elements.TextElement;

/*
    * Email Address
    *
    * Codename: email_address
* Id: 823053ac-0954-45b3-b3d2-0c8075eff263
* Type: text
* Required: true
    */
                readonly email_address: Elements.TextElement;

/*
    * Address
    *
    * Codename: address
* Id: 0af2d832-bd0f-465f-95f6-dbe789b9a9e4
* Type: text
* Required: false
    */
                readonly address: Elements.TextElement;

/*
    * Amenities
    *
    * Codename: amenities
* Id: 7f07963d-b6d6-41ab-bd8a-f8201d26554e
* Type: taxonomy
* Required: true
* Taxonomy: amenities
    */
                readonly amenities: Elements.TaxonomyElement<AmenitiesTaxonomyTermCodenames, AmenitiesTaxonomyCodename>;

/*
    * Ways to Stay
    *
    * Codename: ways_to_stay
* Id: ddc949fa-66a0-42b1-a31c-df05a118ea84
* Type: taxonomy
* Required: false
* Taxonomy: ways_to_stay
    */
                readonly ways_to_stay: Elements.TaxonomyElement<WaysToStayTaxonomyTermCodenames, WaysToStayTaxonomyCodename>;

/*
    * Menu
    *
    * Codename: menu
* Id: d986751b-74e7-48a9-8f80-f71bd05315e7
* Type: subpages
* Required: false
* Allowed content types: page
    */
                readonly menu: Elements.LinkedItemsElement<PageType>;

/*
    * Book Now CTA Text
    *
    * Codename: book_now_cta_text
* Id: fa8408fc-a3c4-4e86-af57-270e1c772459
* Type: text
* Required: false
    */
                readonly book_now_cta_text: Elements.TextElement;

/*
    * Book Now CTA Background Image
    *
    * Codename: book_now_cta_background_image
* Id: b8cf6f49-5aaf-48ca-ae56-b6cbac52c2e1
* Type: asset
* Required: false
    */
                readonly book_now_cta_background_image: Elements.AssetsElement;

/*
    * Book Now CTA Background Video Link
    *
    * Codename: book_now_cta_background_video_link
* Id: f00bba27-3cbc-473e-b650-090974f2097f
* Type: text
* Required: false
* Guidelines: If you want to use a background video, put in the Vimeo link. 
    */
                readonly book_now_cta_background_video_link: Elements.TextElement;

/*
    * Banner Header
    *
    * Codename: banner_header
* Id: 28dc723b-289f-4a9d-aaa2-4fadc3e74ac0
* Type: text
* Required: true
    */
                readonly banner_header: Elements.TextElement;

/*
    * Banner Body
    *
    * Codename: banner_body
* Id: 0196a968-ab11-49f2-b223-3bf27a83e532
* Type: rich_text
* Required: true
* Guidelines: Tell us about your campground. Include information on ways to stay, recreation opportunities, attractions, etc. 
    */
                readonly banner_body: Elements.RichTextElement<CoreType>;

/*
    * Banner Image
    *
    * Codename: banner_image
* Id: ba2c70f2-6567-4a5b-83cb-ba98722014df
* Type: asset
* Required: false
    */
                readonly banner_image: Elements.AssetsElement;}, 
CampgroundTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Campground
*/
export type CampgroundTypeElementCodenames = 'name' | 'phone_number' | 'email_address' | 'address' | 'amenities' | 'ways_to_stay' | 'menu' | 'book_now_cta_text' | 'book_now_cta_background_image' | 'book_now_cta_background_video_link' | 'banner_header' | 'banner_body' | 'banner_image';;

/*
    * Type guard for Campground
    *
    * Id: 8a8d9c56-59bf-4821-aa9d-bab9d33cb2ed
* Codename: campground
    */
export function isCampgroundType(item: IContentItem | undefined | null): item is CampgroundType {
                return item?.system.type === ('campground' satisfies CampgroundTypeCodename);
            };



            