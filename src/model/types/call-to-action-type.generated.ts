/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: KOA 
 * Environment: Production
 * Id: 8381787f-717e-007f-809d-a80af690508b
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
// import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { PageType } from '../types/page-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Call to action' type
*/
            export type CallToActionTypeCodename = keyof Pick<Record<TypeCodenames, null>, "call_to_action">;

            /*
* Typeguard for codename of 'Call to action' type
*/
            export function isCallToActionTypeCodename(value: string | undefined | null): value is CallToActionTypeCodename {
                return typeof value === 'string' && value === ('call_to_action' satisfies CallToActionTypeCodename);
            }

/*
    * Call to action
    *
    * Id: a9196b8d-6320-4feb-aa25-14637761dcc6
* Codename: call_to_action
    */
export type CallToActionType = IContentItem<
{
/*
    * Headline
    *
    * Codename: headline
* Id: c3cc46c3-d5d3-4241-a83c-b4bb903f9a88
* Type: text
* Required: true
    */
                readonly headline: Elements.TextElement;

/*
    * Subheadline
    *
    * Codename: subheadline
* Id: eee46d3e-4f6e-440a-8003-2503d43d5a15
* Type: text
* Required: true
    */
                readonly subheadline: Elements.TextElement;

/*
    * Image
    *
    * Codename: image
* Id: 8f312d9d-d8a2-484a-96c0-39391bf090db
* Type: asset
* Required: true
    */
                readonly image: Elements.AssetsElement;

/*
    * Image position
    *
    * Codename: image_position
* Id: ad7b515d-6fb0-46bd-9cd6-ca5dc1211ee2
* Type: multiple_choice
* Required: true
    */
                readonly image_position: Elements.MultipleChoiceElement<CallToActionTypeImagePositionMultipleChoiceOptions>;

/*
    * Button Label
    *
    * Codename: button_label
* Id: ca581835-4337-4add-bdd3-aa466c685514
* Type: text
* Required: true
    */
                readonly button_label: Elements.TextElement;

/*
    * Button Link
    *
    * Codename: button_link
* Id: 1872121b-6166-451e-8c26-9c78f2cfba47
* Type: modular_content
* Required: true
* Allowed content types: page
    */
                readonly button_link: Elements.LinkedItemsElement<PageType>;}, 
CallToActionTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Call to action
*/
export type CallToActionTypeElementCodenames = 'headline' | 'subheadline' | 'image' | 'image_position' | 'button_label' | 'button_link';;

/*
    * Type guard for Call to action
    *
    * Id: a9196b8d-6320-4feb-aa25-14637761dcc6
* Codename: call_to_action
    */
export function isCallToActionType(item: IContentItem | undefined | null): item is CallToActionType {
                return item?.system.type === ('call_to_action' satisfies CallToActionTypeCodename);
            };

export type CallToActionTypeImagePositionMultipleChoiceOptions = 'left' | 'right' | 'center'

            